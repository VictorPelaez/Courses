datasummine(8)
setwd("~/")
setwd("~/")
datasummine(8)
datasummine(8)
library(datasets)
data(iris)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl,mean)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
info()
class(flags)
clc_list<-lapply(flags,class)
clc_list<-lapply(flags,data.frame)
clc_list<-lapply(flags,class(flags))
clc_list<-lapply(flags,class())
clc_list<-lapply(flags,class,2)
clc_list<-lapply(flags,class,1)
flags
info()
info()
cls_list <- lapply(flags, class)
clc_list<-lapply(flags, class)
clc_list
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(lapply(unique_vals,length),unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
shdja
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
setwd("~/R/Rwork/Coursera")
dir()
best('NY','heart attack')
source("best.R"")
end
source("best.R"
source("best.R")
best('NY','heart attack')
best('NY','heart attack')
best('TX','heart faillure')
best('TX','heart failure')
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character");
data_state<-outcome_data[, 'State'];
num_state<-data_state==state
names_hospital<-outcome_data[num_state,2];
didvalue<-0;
state="TX"
num_state<-data_state==state
num_state
names_hospital<-outcome_data[num_state,2];
outcome_data[, 11]<- as.numeric(outcome_data[, 11])
outcome_data
View(outcome_data)
View(outcome_data)
outcome_data[, 11]<- as.numeric(outcome_data[, 11]);
order(na.omit(outcome_data[num_state,11]))
na.omit(outcome_data[num_state,11])
c(1:4)
which(na.omit(outcome_data[num_state,11])==c(1:4))
which(order(na.omit(outcome_data[num_state,11]))==c(1:4))
which(order(na.omit(outcome_data[num_state,11]))==c(1:4))
order(na.omit(outcome_data[num_state,11])==c(1:4)
)
min(na.omit(outcome_data[num_state,11]))
min(na.omit(outcome_data[num_state,11]),5)
a=c(1,2,34,1,3)
which(a==34)
which(a==c(34,2)
)
which(a==c(34,2,1))
which(a %in% sort(a)[1:3])
num=3
outcome_data[, 11]<- as.numeric(outcome_data[, 11]);
x=na.omit(outcome_data[num_state,11]);
pos_min=which(x %in% sort(x)[1:num])
pos<-which(outcome_data[num_state,11]==pos_min);
pos
x[pos_min]
names_hospital[pos]
names_hospital[pos_min]
outcome_data[, 11]<- as.numeric(outcome_data[, 11]);
x=na.omit(outcome_data[num_state,11]);
pos_min=which(x %in% sort(x)[1:num])
pos_min
outcome_data[, 11]<- as.numeric(outcome_data[, 11]);
x=na.omit(outcome_data[num_state,11]);
pos_min=which(x %in% sort(x)[num])
pos_min
source("rankhospital.R)
source("rankhospital.R")
source("rankhospital.R")
rankhospital <- function("TX", "heart failure", num =2)
rankhospital("TX", "heart failure", num =2)
rankhospital("MN", "heart attack", 5000)
source("rankhospital.R")
rankhospital("TX", "heart failure", num =2)
rankhospital("TX", "heart failure", num =4)
num="best""
num="best"
num="best"
if (num=="best"){}
num=1;}
if (num=="best"){
num=1;}
num
state='TX'
outcome='heart failure'
num=4
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character");
data_state<-outcome_data[, 'State'];
num_state<-data_state==state
names_hospital<-outcome_data[num_state,2];
didvalue<-0;
if (num=="best"){
num=1;}
## Check that state and outcome are valid
if (sum(num_state)==0){
## message("Error in best(", state,",", outcome,") : invalid state");
stop("invalid state", call. = TRUE, domain = NULL)
Ã‡
}
outcome_data[, 17]<- as.numeric(outcome_data[, 17]);
length(outcome_data[, 17])
x=na.omit(outcome_data[num_state,17]);
length(x)
x
View(outcome_data)
outcome_data[, 11]
outcome_data[num_state,11]
length(outcome_data[num_state,11])
length(outcome_data[, 11])
x=na.omit(outcome_data[num_state,11]);
x
x
length(x)
x=na.omit(outcome_data[num_state,11])
x
x=is.na(outcome_data[num_state,11])
x
sum(x)
state='TX'
state='TX'
outcome='heart failure'
num=4
outcome_data <- read.csv("outcome-of-care-measures.csv", colClasses = "character");
data_state<-outcome_data[, 'State'];
num_state<-data_state==state
names_hospital<-outcome_data[num_state,2];
outcome_data[, 17]<- as.numeric(outcome_data[, 17])
length(outcome_data[, 17])
length(outcome_data[num_state, 17])
outcome_data[num_state, 17]
x=na.omit(outcome_data[num_state,17])
x
x.attr
min(x)
postotal_min=which(x %in% sort(x)[1:num])
postotal_min
x[42]
mask=is.na(outcome_data[num_state,17])
mask
sum(mask)
pos=postotal_min[1]
pos
names_hospital[pos]
names_hospital[pos]$mask
names_hospital[mask]$pos
y=names_hospital[mask]
y[pos]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", 1)
outcome_data[, 17]<- as.numeric(outcome_data[, 17])
length(outcome_data[, 17])
x=na.omit(outcome_data[num_state,17])
x
length(x)
length(outcome_data[num_state, 17])
370-294
mask=is.na(outcome_data[num_state,17])
sum(mask)
postotal_min=which(x %in% sort(x)[1:num])
postotal
postotal_min
postotal_min=which(x %in% sort(x)[1:num])
x[postotal_min]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
source("submitscript3.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
source("rankall.R");tail(rankall("pneumonia", "worst"), 3)
submit()
submit()
submit()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[c(2, 7, 11, 17, 23)]
names(data)[1] <- "name"
names(data)[2] <- "state"
names(data)[3] <- "heart attack"
names(data)[4] <- "heart failure"
names(data)[5] <- "pneumonia"
names
names(data)[1]
swirl()
source("swirl")
source("swirl.R")
library(swirl)
swirl()
